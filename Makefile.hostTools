# --------------------------------------------------------------------------------------------------
# Makefile used to build the Legato framework development host tools.
#
# Tools build output is placed under $(LEGATO_ROOT)/build/tools
#
# The tools get installed in $(LEGATO_ROOT)/bin
#
# This Makefile is intended to run as part of a larger build system.
#
# Copyright (C) Sierra Wireless Inc.
# --------------------------------------------------------------------------------------------------

export LEGATO_ROOT ?= $(CURDIR)

export BUILD_DIR := $(LEGATO_ROOT)/build/tools
KCONFIG_BUILD_DIR := $(LEGATO_ROOT)/build/tools/kconfig-frontends
export INSTALL_DIR := $(LEGATO_ROOT)/bin
NINJA_SCRIPT := $(BUILD_DIR)/build.ninja
NINJA_FLAGS =

# Add the framework's bin directory to the PATH environment variable.
export PATH := $(PATH):$(INSTALL_DIR)

# Do not use clang by default.
USE_CLANG ?= 0

# Do not be verbose by default.
VERBOSE ?= 0
ifeq ($(VERBOSE),1)
  NINJA_FLAGS += -v
endif

ifneq ($(LEGATO_JOBS),)
  NINJA_FLAGS += -j $(LEGATO_JOBS)
endif

export HOST_ARCH := $(shell uname -m)
TOOLS_ARCH ?= $(HOST_ARCH)

# NOTE: Ninja is used to build the mk tools.
.PHONY: tools
tools: ninja $(NINJA_SCRIPT) symlinks mkPatch mkdiff
	ninja $(NINJA_FLAGS) -f $(NINJA_SCRIPT)

.PHONY: tool-messages
tool-messages: ninja $(NINJA_SCRIPT)
	ninja $(NINJA_FLAGS) -f $(NINJA_SCRIPT) messages

# Generate the ninja build script.
$(NINJA_SCRIPT): framework/tools/mkTools/ninja-generator $(BUILD_DIR)
	export TOOLS_ARCH=$(TOOLS_ARCH) && \
	framework/tools/mkTools/ninja-generator

# ninja is called ninja-build on some distros (e.g., Fedora).  Make sure ninja appears in the
# path as "ninja" by adding a symlink to the framework's bin directory if necessary.
.PHONY: ninja
ninja: $(INSTALL_DIR)
	@echo -n "Using ninja installed at: " ;\
	if ! which ninja ;\
	then \
		if which ninja-build ;\
		then \
			ln -s `which ninja-build` $(INSTALL_DIR)/ninja ;\
		else \
			echo "***ERROR: Ninja build tool not found." 1>&2 ;\
			exit 1;\
		fi;\
	fi

SCRIPTS := $(wildcard $(LEGATO_ROOT)/framework/tools/scripts/*)

# Create a bunch of symlinks from the install directory to the tools.
.PHONY: symlinks
symlinks: $(INSTALL_DIR)
	ln -sf $(BUILD_DIR)/mk $(INSTALL_DIR)/mk
	ln -sf mk $(INSTALL_DIR)/mkcomp
	ln -sf mk $(INSTALL_DIR)/mkexe
	ln -sf mk $(INSTALL_DIR)/mkapp
	ln -sf mk $(INSTALL_DIR)/mksys
	ln -sf $(foreach script,$(SCRIPTS),$(script)) $(INSTALL_DIR)/
	ln -sf $(LEGATO_ROOT)/framework/tools/ifgen/ifgen $(INSTALL_DIR)/
	ln -sf $(LEGATO_ROOT)/3rdParty/ima-support-tools/ima-sign.sh $(INSTALL_DIR)/
	ln -sf $(LEGATO_ROOT)/3rdParty/ima-support-tools/ima-gen-keys.sh $(INSTALL_DIR)/

# Rule for creating directories.
$(BUILD_DIR) $(INSTALL_DIR):
	mkdir -p $@

.PHONY: mkPatch
mkPatch: $(BUILD_DIR) $(INSTALL_DIR)
	$(MAKE) -C framework/tools/patchTool/mkPatch

.PHONY: mkdiff
mkdiff: $(BUILD_DIR) $(INSTALL_DIR)
	$(MAKE) -C framework/tools/patchTool/mkdiff

.PHONY: kconfig-frontends
kconfig-frontends: $(INSTALL_DIR) $(KCONFIG_BUILD_DIR)/config.status
	cd $(KCONFIG_BUILD_DIR) && \
	make && make install
	ln -sf $(BUILD_DIR)/bin/kconfig-conf $(INSTALL_DIR)/kconfig-conf
	ln -sf $(BUILD_DIR)/bin/kconfig-mconf $(INSTALL_DIR)/kconfig-mconf

$(KCONFIG_BUILD_DIR)/config.status: $(LEGATO_ROOT)/3rdParty/kconfig-frontends/configure
	mkdir -p $(KCONFIG_BUILD_DIR) && cd $(KCONFIG_BUILD_DIR) && \
	$(LEGATO_ROOT)/3rdParty/kconfig-frontends/configure \
	    --prefix=$(BUILD_DIR) --enable-mconf --enable-conf; \

$(LEGATO_ROOT)/3rdParty/kconfig-frontends/configure:
	cd $(LEGATO_ROOT)/3rdParty/kconfig-frontends && autoreconf -fi
