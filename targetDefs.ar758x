# --------------------------------------------------------------------------------------------------
# make definitions specific to Sierra Wireless AR7xxx modules.
#
# Copyright (C), Sierra Wireless Inc.
# --------------------------------------------------------------------------------------------------

include targetDefs.mdm9x28

export TARGET := ar758x

ifndef AR758X_TOOLCHAIN_DIR
  $(warning AR758X_TOOLCHAIN_DIR not defined.  Using default.)
  export AR758X_TOOLCHAIN_DIR := $(shell $(FINDTOOLCHAIN) ar758x dir)
endif
ifndef AR758X_TOOLCHAIN_PREFIX
  export AR758X_TOOLCHAIN_PREFIX := $(shell $(FINDTOOLCHAIN) ar758x prefix)
endif
export TOOLCHAIN_PREFIX = $(AR758X_TOOLCHAIN_PREFIX)
export TOOLCHAIN_DIR = $(AR758X_TOOLCHAIN_DIR)

export TARGET_SANDBOX_IMPORT := TARGET_IMPORTS_ARMV7

# Use simu PAs temporarily
export LEGATO_AVC_PA = $(PA_DIR)/simu/components/le_pa_avc

# QMI PAs
export LEGATO_AUDIO_PA = $(LEGATO_QMI_AUDIO_PA)
export LEGATO_AUDIO_PA_PCM = $(PA_DIR)/audio/pcm/alsa-intf
export LEGATO_AUDIO_PA_AMR = $(PA_DIR)/audio/amr/opencore-amr
export LEGATO_UTIL_PA = $(LEGATO_QMI_UTIL)
export LEGATO_MODEM_PA = $(LEGATO_QMI_MODEM_PA)
ifeq ($(INCLUDE_ECALL),1)
  export LEGATO_MODEM_PA_ECALL = $(LEGATO_QMI_MODEM_PA_ECALL)
endif
export LEGATO_GNSS_PA = $(LEGATO_QMI_GNSS_PA)
#export LEGATO_AVC_PA = $(LEGATO_QMI_AVC_PA)
export LEGATO_SECSTORE_PA = $(LEGATO_QMI_SECSTORE_PA)
export LEGATO_FWUPDATE_PA = $(LEGATO_QMI_FWUPDATE_PA)
export LEGATO_FWUPDATE_PA_DUALSYS = $(PA_DIR)/fwupdate/mdm9x28/le_pa_fwupdate_dualsys
export LEGATO_UARTMODE_PA = $(LEGATO_QMI_UARTMODE_PA)

export MKSYS_FLAGS += -C "-DSIERRA_MDM9X28"
export MKEXE_FLAGS += -C "-DSIERRA_MDM9X28"

# External ADCs
MKSYS_FLAGS += -C "-DADC_BEGIN_NUM=1"
MKSYS_FLAGS += -C "-DADC_COUNT=2"

# PDP Contexts
# 24 profiles, 4 PDPs context in UMTS and 8 PDPs context in LTE network
MKSYS_FLAGS += -C "-DPDP_MAX_PROFILE=24"
MKSYS_FLAGS += -C "-DPDP_MAX_MULTIPDP=8"

# Set this variable to generate a tree with stripped executables and libraries
STRIP_STAGING_TREE ?= 1

# Set default build READ-ONLY (R/O) for this target
export READ_ONLY := 1

# Set default enable SMACK for this target
DISABLE_SMACK ?= 0

# SMACK attribute name and value (optional)
# If set, SMACK attr will be set at build time
ifeq ($(DISABLE_SMACK),0)
  export SMACK_ATTR_NAME=security.SMACK64
  export SMACK_ATTR_VALUE=*
endif

SDEF_TO_USE = modules/Dualsys/ar758x.sdef

# Define SMACK
ifeq ($(DISABLE_SMACK),1)
  MKSYS_FLAGS += -C "-DDISABLE_SMACK=1"
endif
