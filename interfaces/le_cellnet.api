//--------------------------------------------------------------------------------------------------
/**
 * @page c_le_cellnet Cellular Network
 *
 * @ref le_cellnet_interface.h "API Reference"
 *
 * <HR>
 *
 * The Cellular Network service ensures that the modem is registered on the network when an user
 * application makes a request for network access. This includes:
 * - ensuring that the radio is turned on.
 * - ensuring that there is a valid SIM, and it is unlocked.
 * - ensuring that the modem is registered on the network.
 *
 * If all of the above conditions are met, then the service indicates that the network is available.
 *
 * @section le_cellnet_binding IPC interfaces binding
 *
 * All the functions of this API are provided by the @b cellNetService application service.
 *
 * Here's a code sample binding to Cellular Network services:
 * @verbatim
   bindings:
   {
      clientExe.clientComponent.le_cellnet -> cellNetService.le_cellnet
   }
   @endverbatim
 *
 * @section c_le_cellnet_requesting Requesting the Cellular Network
 *
 * The Cellular Network can be requested using le_cellnet_Request(). The le_cellnet_Request
 * function will turn on the radio if it is switched off and it will unlock the SIM if a PIN code is
 * required (it will retrieve the needed information from the config DB,
 * cf. @ref c_le_cellnet_configdb).
 * Before the cellular network is requested, an application should register a network state handler
 * using le_cellnet_AddStateEventHandler(). Once the cellular network becomes available, the handler
 * will be called to indicate that the modem is now registered on the network.
 *
 * If the state of the network changes, then the handler will be called with the new state.
 *
 * To release the cellular network, an application can use le_cellnet_Release(). Once all user
 * applications release the cellular network access, then the service will turn off the radio.
 *
 * All configuration data required for a network registration, such as the PIN code of the SIM, will
 * be stored in the Config DB.
 *
 * @section c_le_cellnet_options Network Options
 *
 * @note The functionaliy described in this section is not currently implemented; this
 * description is provided to outline future functionality.
 *
 * Some applications may have network requirements that are not met by the default cellular network
 * service. For example, it would specify the SIM on which it wants to operate.
 *
 * In this case, an application can create a request object using le_cellnet_CreateRequest(),
 * set optional values on that request object, using le_cellnet_SelectSim() and then submits that
 * object to a cellular network request, using le_cellnet_SubmitRequest().
 *
 * @section c_le_cellnet_configdb Cellular Network configuration tree
 * @copydoc c_le_cellnet_configdbPage_Hide
 *
 * <HR>
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */

/**
 * @interface c_le_cellnet_configdbPage_Hide
 *
 * The configuration database path for the SIM is:
 * @verbatim
   /
       modemServices/
           sim/
               1/
                   pin<string> == <PIN_CODE>

  @endverbatim
 *
 *  - '1' is the sim slot number that le_sim_GetSelectedCard() is returning.
 *
 *  - 'PIN_CODE' is the PIN code for the SIM card.
 *
 * @note
 * when a new SIM is inserted and :
 *   - is locked, Cellular Network Service will read automatically the config DB in order to try to
 * enter the pin for the SIM card.
 *   - is blocked, Cellular Network Service just log an error and did not try to enter the puk code.
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
 * @file le_cellnet_interface.h
 *
 * Legato @ref c_le_cellnet include file.
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
 * Reference returned by Request function and used by Release function
 */
//--------------------------------------------------------------------------------------------------
REFERENCE RequestObj;


//--------------------------------------------------------------------------------------------------
/**
 * Cellular Network states.
 *
 */
//--------------------------------------------------------------------------------------------------
ENUM State
{
    RADIO_OFF,      ///< The radio is Off.
    REG_EMERGENCY, ///< Only Emergency calls are allowed.
    REG_HOME,      ///< Registered, home network.
    REG_ROAMING,   ///< Registered to a roaming network.
    REG_UNKNOWN    ///< Unknown state.
};


//--------------------------------------------------------------------------------------------------
/**
 * Handler for network state changes
 */
//--------------------------------------------------------------------------------------------------
HANDLER StateHandler
(
    State  state  IN            ///< The cellular network state
);

//--------------------------------------------------------------------------------------------------
/**
 * This event provides information on network state changes
 */
//--------------------------------------------------------------------------------------------------
EVENT StateEvent
(
    handler StateHandler
);

//--------------------------------------------------------------------------------------------------
/**
 * Request a cellular network
 *
 * @return
 *      - A reference to the cellular network
 *      - 0 (zero) if the network requested could not be processed
 */
//--------------------------------------------------------------------------------------------------
FUNCTION RequestObj Request
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Release a cellular network
 */
//--------------------------------------------------------------------------------------------------
FUNCTION Release
(
    RequestObj cellNetRef IN  ///< Reference to a cellular network request.
);



