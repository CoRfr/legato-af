//--------------------------------------------------------------------------------------------------
/**
 * @page c_bootReason Boot Reason Query
 *
 * @ref le_bootReason_interface.h "API Reference"
 *
 * <HR>
 *
 * This API can be used to determine the reason for the last OS boot when using @ref c_ulpm
 * (e.g., power on due to pre-configured time setty or GPIO toggled externally).
 *
 * Boot may occur due to exit from ultra low power mode or press on Power button. Exit from low
 * power state may occur through various sources (e.g., GPIO pins or timers that are specific to the
 * device hardware).
 *
 * @section bootReason_example Sample Code
 *
 * This C code sample sows an API calling sequence to get boot-reason:
 *
 *  @code
 *
 *  void CheckMDMBootReason
 *  (
 *      void
 *  )
 *  {
 *      if (le_bootReason_WasTimer())
 *      {
 *           LE_INFO("Timer boot");
 *      }
 *      else if (le_bootReason_WasGpio(<gpioNum>))
 *      {
 *           LE_INFO("GPIO<gpioNum> boot");
 *      }
 *      else
 *      {
 *          LE_INFO("Power-on");
 *      }
 *  }
 *
 *  @endcode
 *
 * <HR>
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */
//--------------------------------------------------------------------------------------------------


//--------------------------------------------------------------------------------------------------
/**
 * @file le_bootReason_interface.h
 *
 * Legato @ref c_bootReason include file.
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */
//--------------------------------------------------------------------------------------------------


//--------------------------------------------------------------------------------------------------
/**
 * Checks whether boot-reason was timer expiry.
 *
 * @return
 *      - TRUE if boot-reason was timer expiry.
 *      - FALSE otherwise.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION bool WasTimer();


//--------------------------------------------------------------------------------------------------
/**
 * Checks whether boot-reason was specific gpio change. GPIO number is specified in parameter.
 *
 * @return
 *      - TRUE if boot-reason was specified gpio change.
 *      - FALSE otherwise.
 *
 * @note The process exits if invalid gpio number is passed.  Check corresponding device documents
 * for valid list of gpio.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION bool WasGpio
(
    uint32 gpioNum  IN      ///< GPIO number.
);
