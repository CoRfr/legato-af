//--------------------------------------------------------------------------------------------------
/**
 * @page c_info Modem Information
 *
 * @ref le_info_interface.h "API Reference"
 *
 * <HR>
 *
 * This file contains prototype definitions for Modem Information APIs.
 *
 * @section le_info_binding IPC interfaces binding
 *
 * All the functions of this API are provided by the @b modemService foundation service.
 *
 * Here's a code sample binding to modem services:
 * @verbatim
   bindings:
   {
      clientExe.clientComponent.le_info -> modemService.le_info
   }
   @endverbatim
 *
 * @section le_info_version Query Firmware Version
 *
 * le_info_GetFirmwareVersion() is used to query the current firmware version.
 *  le_info_GetBootloaderVersion() is used to query the current bootloader version.
 *  In both cases, the version is returned as a human readable string.
 *
 * The linux kernel version can be queried using standard linux methods, such as the uname
 * command, or the uname() API.
 *
 * @section le_info_model Query Device information
 *
 * le_info_GetDeviceModel() is used to retrieve the target hardware platform identity.
 *
 * le_info_GetImei() is used to retrieve the International Mobile Equipment Identity (IMEI).
 *
 * le_info_GetMeid() is used to retrieve the CDMA device Mobile Equipment Identifier (MEID).
 *
 * le_info_GetEsn() is used to retrieve Electronic Serial Number (ESN) of the device.
 *
 * le_info_GetMdn() is used to retrieve the Mobile Directory Number (MDN) of the device.
 *
 * le_info_GetMin() is used to retrieve the CDMA Mobile Identification Number (MIN).
 *
 * le_info_GetPrlVersion() is used to retrieve the CDMA version of Preferred Roaming List (PRL).
 *
 * le_info_GetPrlOnlyPreference() is used to retrieve the CDMA Preferred Roaming List (PRL)
 *  only preferences status.
 *
 * le_info_GetNai() is used to retrieve the CDMA Network Access Identifier (NAI) string.
 *
 * le_info_GetManufacturerName() is used to retrive the Manufacturer name.
 *
 * le_info_GetPriId() is used to retrieve the Product Requirement Information Identifier (PRI ID)
 *   Part Number and the Revision number.
 * The Part number is a 7-digit string. Revision Number string contains 2-digit major
 *  version + '.' char + 2-digit minor version (xx.xx).
 *
 * <HR>
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
 * @file le_info_interface.h
 *
 * Legato @ref c_info include file.
 *
 * Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.
 */
//--------------------------------------------------------------------------------------------------

// NOTE: string sizes are set to an arbitrary value.  The correct values
//       still need to be filled in.

//--------------------------------------------------------------------------------------------------
/**
 * Maximum IMEI length (15 digits)
 */
//--------------------------------------------------------------------------------------------------
DEFINE IMEI_MAX_LEN    = (15);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum IMEI length (15 digits)
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE IMEI_MAX_BYTES  = (IMEI_MAX_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of a version string
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_VERS_LEN   = 256;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of a version string
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_VERS_BYTES = (MAX_VERS_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of a model string
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MODEL_LEN   = 256;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of a model string
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MODEL_BYTES = (MAX_MODEL_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Electronic Serial Number (ESN) string.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_ESN_LEN   = 32;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Electronic Serial Number (ESN) string.
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_ESN_BYTES = (MAX_ESN_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Mobile Equipment Identifier (MEID) string.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MEID_LEN   = 32;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Mobile Equipment Identifier (MEID) string.
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MEID_BYTES = (MAX_MEID_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Mobile Directory Number (MDN) string.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MDN_LEN   = 32;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Mobile Directory Number (MDN) string.
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MDN_BYTES = (MAX_MDN_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Mobile Station ISDN Number (MSISDN) string.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MIN_LEN   = 32;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Mobile Station ISDN Number (MSISDN) string.
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MIN_BYTES = (MAX_MIN_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Mobile Station ISDN Number (NAI) string.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_NAI_LEN   = 72;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Mobile Station ISDN Number (NAI) string.
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_NAI_BYTES = (MAX_NAI_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Manufacturer Name string.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MFR_NAME_LEN   = 128;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of an Manufacturer Name string.
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_MFR_NAME_BYTES = (MAX_MFR_NAME_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of the Product Requirement Information Identifier (PRI ID) Part Number string.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_PRIID_PN_LEN   = 7;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of the Product Requirement Information Identifier (PRI ID) Part Number string.
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_PRIID_PN_BYTES = (MAX_PRIID_PN_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of the Product Requirement Information Identifier (PRI ID) Revision Number string.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_PRIID_REV_LEN   = 5;

//--------------------------------------------------------------------------------------------------
/**
 * Maximum length of the Product Requirement Information Identifier (PRI ID) Revision Number string.
 * One extra byte is added for the null character.
 */
//--------------------------------------------------------------------------------------------------
DEFINE MAX_PRIID_REV_BYTES = (MAX_PRIID_REV_LEN+1);

//--------------------------------------------------------------------------------------------------
/**
 * Retrieve the International Mobile Equipment Identity (IMEI).
 *
 * @return LE_FAULT       Function failed to retrieve the IMEI.
 * @return LE_OVERFLOW     IMEI length exceed the maximum length.
 * @return LE_OK          Function succeeded.
 *
 * @note If the caller passes a bad pointer into this function, it's a fatal error; the
 *       function will not return.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetImei
(
    string   imei[IMEI_MAX_LEN] OUT   ///< IMEI string.
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the firmware version string
 *
 * @return
 *      - LE_OK on success
 *      - LE_NOT_FOUND if the version string is not available
 *      - LE_OVERFLOW if version string to big to fit in provided buffer
 *      - LE_FAULT for any other errors
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetFirmwareVersion
(
    string version[MAX_VERS_LEN] OUT     ///< Firmware version string
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the bootloader version string
 *
 * @return
 *      - LE_OK on success
 *      - LE_NOT_FOUND if the version string is not available
 *      - LE_OVERFLOW if version string to big to fit in provided buffer
 *      - LE_FAULT for any other errors
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetBootloaderVersion
(
    string version[MAX_VERS_LEN] OUT     ///< Bootloader version string
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the device model identity (Target Hardware Platform).
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to get the value.
 *      - LE_OVERFLOW      The device model identity length exceed the maximum length.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetDeviceModel
(
    string modelPtr[MAX_MODEL_LEN] OUT     ///< The model identity string (null-terminated).
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the CDMA device Mobile Equipment Identifier (MEID).
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to get the value.
 *      - LE_OVERFLOW      The device Mobile Equipment identifier length exceed the maximum length.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetMeid
(
    string meidStr[MAX_MEID_LEN] OUT   ///< The Mobile Equipment identifier (MEID)
                                       ///<  string (null-terminated).
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the CDMA Electronic Serial Number (ESN) of the device.
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to get the value.
 *      - LE_OVERFLOW      The Electronic Serial Number length exceed the maximum length.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetEsn
(
    string esnStr[MAX_ESN_LEN] OUT     ///< The Electronic Serial Number (ESN) of the device.
                                       ///<  string (null-terminated).
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the CDMA Mobile Directory Number (MDN) of the device.
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to get the value.
 *      - LE_OVERFLOW      The Mobile Directory Number length exceed the maximum length.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetMdn
(
    string mdnStr[MAX_MDN_LEN] OUT     ///< The Mobile Directory Number (MDN)
                                       ///<  string (null-terminated).
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the CDMA version of Preferred Roaming List (PRL).
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_NOT_FOUND     The information is not availble.
 *      - LE_FAULT         The function failed to get the value.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetPrlVersion
(
    uint16 prlVersion OUT    ///< The Preferred Roaming List (PRL) version.
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the CDMA Preferred Roaming List (PRL) only preferences status.
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_NOT_FOUND	   The information is not availble.
 *      - LE_FAULT         The function failed to get the value.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetPrlOnlyPreference
(
    bool prlOnlyPreference OUT      ///< The CDMA Preferred Roaming List only preferences status.
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the CDMA Mobile Identification Number (MIN).
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to get the value.
 *      - LE_OVERFLOW      The CDMA Mobile Identification Number length exceed the maximum length.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetMin
(
    string msisdnStr[MAX_MIN_LEN] OUT  ///< The Mobile Identification Number (MIN)
                                       ///<  string (null-terminated).
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the CDMA Network Access Identifier (NAI) string in ASCII text.
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to get the value.
 *      - LE_OVERFLOW      The Network Access Identifier (NAI) length exceed the maximum length.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetNai
(
    string naiStr[MAX_NAI_LEN] OUT      ///< The Network Access Identifier (NAI)
                                        ///<  string (null-terminated).
);

//--------------------------------------------------------------------------------------------------
/**
 * Get the Manufacturer Name string in ASCII text.
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to get the value.
 *      - LE_OVERFLOW      The Manufacturer Name length exceed the maximum length.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetManufacturerName
(
    string mfrNameStr[MAX_MFR_NAME_LEN] OUT    ///< The Manufacturer Name string (null-terminated).
);


//--------------------------------------------------------------------------------------------------
/**
 * Get the Product Requirement Information Part Number and Revision Number strings in ASCII text.
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to get the value.
 *      - LE_OVERFLOW      The Part or the Revision Number strings length exceed the maximum length.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t GetPriId
(
    string priIdPnStr[MAX_PRIID_PN_LEN] OUT,  ///< The Product Requirement Information Identifier
                                              ///< (PRI ID) Part Number string (null-terminated).
    string priIdRevStr[MAX_PRIID_REV_LEN] OUT ///< The Product Requirement Information Identifier
                                              ///< (PRI ID) Revision Number string
                                              ///< (null-terminated).
);
