/*
 * Interface for Modem Data Control Service
 *
 * Copyright (C) Sierra Wireless, Inc. 2013.  All rights reserved. Use of this work is subject to license.
 */

// NOTE: string sizes are set to an arbitrary value.  The correct values
//       still need to be filled in.

HANDLER SessionStateHandler
{
    ADD_HANDLER_PARAMS
    (
        le_mdc_Profile_Ref_t profileRef ///< The profile object of interest
    );

    HANDLER_PARAMS
    (
        bool   isConnected
    );
};

FUNCTION le_mdc_Profile_Ref_t LoadProfile
(
    string name[100] IN                     ///< Name of the profile.
);

FUNCTION le_result_t GetProfileName
(
    le_mdc_Profile_Ref_t profileRef,        ///< Query this profile object
    string name[100] OUT                    ///< The name of the profile
);

FUNCTION le_result_t StartSession
(
    le_mdc_Profile_Ref_t profileRef         ///< Start data session for this profile object
);

FUNCTION le_result_t StopSession
(
    le_mdc_Profile_Ref_t profileRef         ///< Stop data session for this profile object
);

FUNCTION le_result_t GetSessionState
(
    le_mdc_Profile_Ref_t profileRef,        ///< Query this profile object
    bool isConnected OUT                    ///< The data session state
);

FUNCTION le_result_t GetInterfaceName
(
    le_mdc_Profile_Ref_t profileRef,        ///< Query this profile object
    string interfaceName[10] OUT            ///< The name of the network interface
);

FUNCTION le_result_t GetGatewayAddress
(
    le_mdc_Profile_Ref_t profileRef,        ///< Query this profile object
    string gatewayAddr[10] OUT              ///< The gateway IP address in dotted format
);

FUNCTION le_result_t GetDNSAddresses
(
    le_mdc_Profile_Ref_t profileRef,        ///< Query this profile object
    string dns1AddrStr[10] OUT,             ///< The primary DNS IP address in dotted format
    string dns2AddrStr[10] OUT              ///< The secondary DNS IP address in dotted format
);
