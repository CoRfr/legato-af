#!/bin/sh

# Set the SMACK label for /dev/null and /dev/zero to "*" so that any everyone can have access to them.
/usr/local/bin/xattr set security.SMACK64 "*" /dev/null
/usr/local/bin/xattr set security.SMACK64 "*" /dev/zero

# TODO: This section of code should be done earlier in the boot sequence so that syslogd will start
# earlier with the proper label.  Leaving it here for now until we have a hook into earlier stages
# of the boot system.  Another option is for Legato to build a log forwarding daemon that has the
# proper permissions.  In that case this code is not needed at all.

# Set the our syslogd restart script to run as label "*" so that when it starts syslogd, syslogd
# will run with the "*" label as well.  Can't just set the security.SMACK64EXEC label of syslogd
# because busybox syslogd part of one large busybox utils file.
/usr/local/bin/xattr set security.SMACK64EXEC "*" /mnt/flash/startup/fg_02_RestartSyslogd

# Only allow the "framework" labeel to access the Legato directory.
mkdir -p /opt/legato
/usr/local/bin/xattr set security.SMACK64 "framework" /opt/legato

# Set security.SMACK64EXEC label to fg_10_StartLegato so that it can set the smack label for the
# supervisor and installer.
/usr/local/bin/xattr set security.SMACK64EXEC "admin" /mnt/flash/startup/fg_10_StartLegato

# Set SMACK labels for used devices.  This is temporary and should be set by the Supervisor on
# demand.
if [ -e /dev/ttyHSL0 ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/ttyHSL0
  chmod 0666 /dev/ttyHSL0
fi

if [ -e /dev/ttyHSL1 ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/ttyHSL1
  chmod 0666 /dev/ttyHSL1
fi

if [ -e /dev/ttyGS0 ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/ttyGS0
  chmod 0666 /dev/ttyGS0
fi

if [ -e /dev/ttyGS1 ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/ttyGS1
  chmod 0666 /dev/ttyGS1
fi

if [ -e /dev/sierra_spi ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/sierra_spi
  chmod 0666 /dev/sierra_spi
fi

if [ -e /dev/sierra_i2c ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/sierra_i2c
  chmod 0666 /dev/sierra_i2c
fi

if [ -e /dev/nmea ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/nmea
  chmod 0666 /dev/nmea
fi

if [ -e /dev/ttyAT ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/ttyAT
  chmod 0666 /dev/ttyAT
fi

if [ -e /dev/input/event0 ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/input/event0
  chmod 0666 /dev/input/event0
fi

if [ -e /dev/input/event1 ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/input/event1
  chmod 0666 /dev/input/event1
fi

if [ -e /dev/input/event2 ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/input/event2
  chmod 0666 /dev/input/event2
fi

if [ -e /dev/input/mice ] ; then
  /usr/local/bin/xattr set security.SMACK64 "*" /dev/input/mice
  chmod 0666 /dev/input/mice
fi
