#! /bin/sh

# options macrandom | macfixed, dhcp | static
# static forces macfixed
# static needs more params - how to handle in a script?

function usage () {
    echo ""
    echo "Purpose:"
    echo "$0 allows the user to set up eth0 to re-use the same MAC hardware address"
    echo "across reboots and to allow simple configuration of a static IPv4 address on eth0"
    echo "If you have a fancy 'interfaces' setup then you probably shouldn't use this script"
    echo "but your original file will be backed up with a timestamp added to the name."
    echo ""
    echo "Usage:"
    echo "$0 [macrandom|macfixed] [dhcp|static] [address <address>] [netmask <netmask>] [gateway <gateway>]"
    echo "default behaviour is to set 'macfixed dhcp' if called without arguments"
    echo "'static' overrides 'macrandom' to 'macfixed'"
    echo "'address', 'netmask' and 'gateway', if given, are only used with 'static'"
    echo "$0 'macrandom' restores the factory default where a different MAC address will be used on each reboot"
}

# defaults to fixed mac w/ dhcp
mactype="fixed"
netassign="dhcp"

# get current values for mac, addr, mask, gway
r=$(route | awk '/eth0/{if  (/UG/){print "gway="$2; quit} }')
r="$r $(ifconfig eth0 | awk '/HWaddr/{print "mac="$5}/inet\W/{sub(/addr:/,"addr=",$2);sub(/Mask:/,"mask=",$4);print $2,$4}')"
if [ "$1" == "show" ]
then
    for b in $r
    do
        echo $b
    done
    exit 0
else
    for b in $r
    do
        declare $b
    done
fi

# override with options
while (( $# ))
do
    case $1 in
    macrandom) mactype="random"; netassign="dhcp";;
    macfixed) mactype="fixed";;
    static) netassign="static";;
    dhcp) netassign="dhcp";;
    address) shift; addr=$1;;
    netmask) shift; mask=$1;;
    gateway) shift; gway=$1;;
    *) echo "unknown option $1"; usage; exit 1;;
    esac
    shift
done
if [ "$netassign" == "static" ]
then
    mactype="fixed"
fi

# if static, ask mask, gway, addr
if [ "$netassign" == "dhcp" ]
then
    addr=''
fi

if [ "$mactype" == "random" ]
then
    mac=''
fi

# modify interfaces file
ifile="/etc/network/interfaces"
dstamp=$(date +%Y%m%d%H%M%S)
if ! mv "${ifile}" "${ifile}_${dstamp}"
then
    exit 1
fi

# This awk snippet will skip over iface eth0 lines
# replacing them with lines created from the supplied values.
awk 'function writeStatic (mac, addr, mask, gway) {
        print "iface eth0 inet static"
        if (mac) {print "\thwaddress ether " mac}
        print "\taddress " addr
        print "\tnetmask " mask
        print "\tgateway " gway
    }
    function writeDhcp (mac) {
        print "iface eth0 inet dhcp"
        if (mac) {print "\thwaddress ether " mac}
    }
    BEGIN {skip=0}
    {if (!match($0, "^\t")) {skip=0}
     if ($1 == "iface") {
        if ($2 == "eth0") {
            skip=1;
            if (mac && addr) {writeStatic(mac,addr,mask,gway)}
            else {writeDhcp(mac)}
            }
        };
     if (!skip){print}
    }' \
    mac=$mac \
    addr=$addr \
    mask=$mask \
    gway=$gway \
    "${ifile}_${dstamp}" > "${ifile}"

echo "${ifile} has been updated. Original has been renamed ${ifile}_${dstamp}"
# if this is being run from an ssh connection ssh would hang if we didn't 
# disconnect before the network went down
nohup sh -c "sleep 1; ifdown eth0; ifup eth0" &

