/** @page defFilesFormat Common File Format

All of the definition files have the same format. They're divided into sections.  Each section type
has a set of permitted content, which could be simple, numerical or text values, named items, or
other sections (subsections).


@section defFileFormatSections Sections

A section always starts with a section name followed by a colon (':').

@code
faultAction: restart

maxFileSystemBytes: 200K
@endcode

Sections that can have multiple content items always have curly braces around their content.

@code
sources:
{
    helloWorld.c
    myClass.cpp
}
@endcode

All sections are optional; they can be empty or omitted.

Sections can be in any order, multiple occurrences are permitted, and some sections have
sub-sections.

@code
requires:
{
    file:
    {
        /dev/ttyS0  /dev/uart
    }

    file:
    {
        /tmp/foo  /tmp/
    }

    dir:
    {
    }
}
@endcode


@section defFileFormatNamedItems Named Items

A named item always begins with the item name followed by an equals sign ('=').

@code
myPool = 45
@endcode

If a named item can have multiple content items, then it must have curly braces around its content.

@code
myExe = { myComponent otherComponent }
@endcode


@section defFileFormatNumberValues Numerical Values

Integers are required in some sections.

@code
maxFileDescriptors: 100
@endcode

Numbers can be expressed in multiples of 1024 by adding the 'K' suffix.

@code
maxFileSystemBytes: 120K
@endcode


@section defFileFormatTextValues Text Values

Some sections contain text-based values.  The format of these varies depending on the type of
section.


@section defFileFormatUsingEnvVarsIn Environment Variables

It's possible to use environment variables inside of <c>.sdef</c>, <c>.adef</c>, and
<c>Component.cdef</c> files.

This works the same way as in shell scripts, by prefixing the environment variable name with
a dollar sign ($):

@code
requires:
{
    api:
    {
        $BUILD_ROOT/interfaces/httpdCtrl.api
    }
}
@endcode

If necessary, the variable name can also be enclosed in curly braces.

@code
requires:
{
    api:
    {
        ${PRODUCT_FAMILY}_interfaces/httpdCtrl.api
    }
}
@endcode

Some useful environment variables:

 - @c LEGATO_ROOT = path to where the Legato framework sources are located
 - @c LEGATO_TARGET = build target (e.g., wp85, localhost)
 - @c LEGATO_BUILD = shorthand for <c>$LEGATO_ROOT/build/$TARGET</c>
 - @c LEGATO_SYSROOT = path of the directory containing the target device's system files
 - @c CURDIR = path of the directory containing the definition file being parsed


@section defFileFormatDirectives Include Directives

Definition file sections or parts of a section may be common between several related
systems, applications or components.  For example, all systems built for a certain module may
need the some common @c buildVars or @c cflags set, or a series of related products
may all share a base set of apps.
To reuse common parts of the definition file, these parts can be separated
into a common file, which is then included in each definition file where it is needed.  This
is done through include directives.

Include directives consist of the word @c \#include followed by the name of the file to include.
For example

@code
#include baseBuildVars.inc
@endcode

will be treated as if the contents of baseBuildVars.inc appeared at this point.  Multiple
include directives can be used to include multiple files.

When looking for a file to include, environment variables in the filename will be expanded first.
If the filename is absolute, that file will be included.  If it is relative, first the directory
containing the current file will be searched, followed by the
@c ${LEGATO_ROOT} directory.

@note If an environment variable is used in an include filename the value of that environment
variable can't be changed in a later @c buildVars section.


@section defFileFormatWhitespace Whitespace

Tabs, spaces, new-lines, carriage-returns and comments act as token separators only, and are
otherwise all ignored. Consequently, choice of indentation and spacing style is relatively
unrestricted.


@section defFileFormatComments Comments

Comments can be included using
@code
 // C++-style one-line comments.

 /* or
    C-style multi-line comments. */
@endcode

@section defFileFormatSample Sample
@code
/* Component.cdef file for a hypothetical web server component that provides a control API
 * (defined in httpdCtrl.api) that allows other apps to start and stop the web server via IPC.
 */

#include "targets/${LEGATO_TARGET}.def"

bundles:
{
    // Include all the web pages from the build host in the application, and have them appear
    // to the application under /var/www.
    dir:
    {
        htdocs   /var/www
    }
}

provides :     // Note that space is allowed between the section name and the colon.
{
    api:    {   httpdCtrl.api
            }
}

sources: {httpd.c}
@endcode

Copyright (C) Sierra Wireless Inc.

**/
