/** @page defFilesSdef System Definition .sdef

<c>.sdef</c> files can contain these sections:

@section defFilesSdef_App App

An <c>apps:</c> section declares one or more apps to be deployed to
the target system.

@code
apps:
{
    webserver
}
@endcode

This looks for an app definition file called <c>webserver.adef</c> and includes it
in the system.

The @c apps: section can override limits and other app settings.

Here's a code sample to deploy a web server limiting its share of the CPU under heavy load to 500
(see @ref defFilesAdef_cpuShare):

@code
apps:
{
    webServer
    {
        cpuShare: 500
    }
}
@endcode

Any of the following subsections can be used in an  @c .sdef @c apps: section, and will override
the .adef setting for all processes in that app:

@ref defFilesAdef_cpuShare <br>
@ref defFilesAdef_processFaultAction <br>
@ref defFilesAdef_groups  <br>
@ref defFilesAdef_processMaxCoreDumpFileBytes  <br>
@ref defFilesAdef_processMaxFileBytes  <br>
@ref defFilesAdef_processMaxFileDescriptors  <br>
@ref defFilesAdef_maxFileSystemBytes  <br>
@ref defFilesAdef_processMaxLockedMemoryBytes  <br>
@ref defFilesAdef_maxMemoryBytes  <br>
@ref defFilesAdef_maxMQueueBytes  <br>
@ref defFilesSdef_maxPriority  <br>
@ref defFilesAdef_maxQueuedSignals  <br>
@ref defFilesAdef_maxThreads  <br>
@ref defFilesAdef_maxSecureStorageBytes  <br>
@ref defFilesAdef_pools  <br>
@ref defFilesAdef_sandboxed <br>
@ref defFilesAdef_start  <br>
@ref defFilesAdef_watchdogAction <br>
@ref defFilesAdef_watchdogTimeout <br>

@subsection defFilesSdef_maxPriority Max Priority

Sets the maximum priority level for running the app.

Acts as a ceiling only. Lowers the priority level if an app would otherwise
be allowed to use a higher priority. It won't raise the priority level for any processes
in the app.

Here's a code sample where a process in the app's .adef is configured to start at high priority,
and the .sdef section for that app has maxPriority set to @c medium so the process
will start at medium priority.

@code
apps:
{
    foo
    {
        maxPriority: high
    }
}
@endcode

Another process in the same .adef configured to start at low priority
will still start at low priority.

@section defFilesSdef_bindings Bindings

Lists IPC @c bindings that connect apps’ external IPC interfaces. They're listed in the
@ref defFilesAdef_extern "extern section of their @c .adef files".
Each binding connects one client-side interface to one server-side interface.

Interfaces use the app name and the interface name,
separated by a period (‘.’).  The two bound-together interfaces are separated by an arrow ("->").

Here's a code sample:

@code
apps:
{
    vavController
    thermostat
    airHandlerProxy
}

bindings:
{
    // Connect the VAV controller to the thermostat
    vavController.temp -> thermostat.temp
    vavController.setpoint -> thermostat.setpoint

    // Connect the VAV controller to the supply air duct temperature sensor
    vavController.ductTemp -> ductTemperatureSensor.temp

    // Hook up the VAV control outputs to the damper actuators.
    vavController.supplyDamper -> supplyAirDamper.damper
    vavController.returnDamper -> returnAirDamper.damper

    // Use a network proxy to request duct temperature changes from the Air Handling Unit.
    vavController.airHandler -> airHandlerProxy.airHandler
}
@endcode

For security reasons, binding between apps is never performed unless explicitly
specified in the @c .sdef or @c .adef files.

Beware that if an app's client-side extern interface instance is left unbound, the process
or processes that require that interface may not be able to run.

<HR>

Copyright (C) Sierra Wireless Inc. Use of this work is subject to license.

**/
