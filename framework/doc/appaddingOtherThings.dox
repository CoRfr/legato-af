/** @page appaddingOtherThings Add Things

After you've created your executable and turned it into an app (.adef), you can add
others things you might need (e.g., a third-party library, some data files, a script or a 
legacy program built on another system).

To add other files to applications, you add other sections to your application's @c .adef file.

Here's a sample of how to add an audio file and a third-party library:

@code
bundles:
{
    file:
    {
        [r]     audio/alert.wav     /usr/share/sounds/

        [r]     third-party/foo/lib/foo.so.1 /lib
    }
}
@endcode

The @c file: subsection of the @c bundles: section will copy the file ./audio/alert.wav from the
build host's file system (relative to the current working directory in which @c mkapp is run), and
bundle it into the application such that it appears under /usr/share/sounds (from the application's
point-of-view when it runs on the target).

The letter inside the square brackets (e.g., [r]) contain the permissions flags
for the file on the target:
 - 'r' = @b readable
 - 'w' = @b writeable
 - 'x' = @b executable

If you want to have a script or other executable run when the application starts, add that file to
 - the "file:" subsection of a "bundles:" section (with the executable flag [x] set), and
 - the list of executables in the processes section, "run:" subsection.

@code
bundles:
{
    file:
    {
        [x]     otherProject/bin/bar    /usr/bin/bar
    }
}

processes:
{
    run:
    {
        (/usr/bin/bar)
    }
}
@endcode

This grabs a copy of ./otherProject/bin/bar (relative to the directory where @c mkapp is run),
puts it in the application sandbox's /usr/bin/bar directory, and starts one instance of
it when the application starts.


<HR>

Copyright (C) 2014 Sierra Wireless, Inc. Use of this work is subject to license.

**/
