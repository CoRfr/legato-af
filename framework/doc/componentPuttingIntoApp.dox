/** @page componentPuttingIntoApp Make Components Into Apps

After you've created your client and server programs with their interfaces
bound to each other, let's create a new app.

@image html HelloIPCApp.png

To do this, we create an app definition file called @c helloWorld.adef.

@verbatim
$ gedit helloWorld.adef
@endverbatim

It should look like this:

@verbatim
executables:
{
    myServer = ( greetServer )
    myClient = ( greetClient )
}

processes:
{
    run:
    {
        (myServer)
        (myClient)
    }
}

bindings:
{
    myClient.greetClient.hello -> myServer.greetServer.hello
}
@endverbatim

This defines two executable programs called @c myServer (containing the greetServer component)
and @c myClient (containing the greetClient component).

It then starts one instance of @c myServer and one instance of @c myClient, and binds
@c myClient.greetClient.hello to @c myServer.greetServer.hello.

Now we can run @c mkapp to build everything and package it up into an app.

@verbatim
$ mkapp helloWorld.adef -t wp7
@endverbatim

You'll now have a file called "helloWorld.wp7" that contains your app.

You can install and run it using instapp, see @ref appCreating for details.


<HR>

Copyright (C) Sierra Wireless, Inc. 2014.  Use of this work is subject to license.

**/
