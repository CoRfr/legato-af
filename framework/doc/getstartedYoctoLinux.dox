/** @page getstartedYoctoLinux Yocto Linux


@ref yoctoDirectories <br>
@ref prebuiltYoctoImages <br>
@ref rebuildYoctoImages <br>
@ref flashYoctoImages <br>
@ref custYoctoImages <br>
@subpage getstartedInstallNotes


You'll need to complete these steps if you need to setup your board for Yocto.

The Yocto Project is an open source collaboration project that provides templates, 
tools and methods to help you create custom Linux-based systems for embedded products regardless of the hardware architecture.

Legato is compatible with Yocto 1.4.1.

@section yoctoDirectories Yocto Linux Directories

Untar the file @b Legato-Linux-Source-mdm9x15-14.1.tar.bz2 to a directory: 
@code 
$ cd <some directory> 
$ tar xvjf Legato-Linux-Source-mdm9x15-14.1.tar.bz2
@endcode

These file/directories will be extracted: 
- <b>linux-yocto-3.4.git</b>  -  Linux kernel - 14.1.0.Beta.rc2
- <b>Legato-Yocto1_4</b> -  Sierra Wireless specific layers
- <b>meta-swi</b> -  Hardware adaptations
- <b>meta-swi-extras</b> -  Build scripts and proprietary code

Yocto uses a layered model for its build system. In Legato, device-specific layers are
 @c meta-swi-<target> and @c meta-swi-bin.
  
Yocto 1.4.1 and poky environment documentation is available at:
https://www.yoctoproject.org/documentation/archived?keys=&field_version_tid=45 

@section prebuiltYoctoImages Pre-built Yocto Image

The prebuilt directory contains a kernel and root file system that can be built using the 
command below. It's the same as what's flashed on the device, and can be used to 
return to a known state. 

- @b kernel - kernel image 
- @b rootfs - smallish root file system ready for basic development. 

Instructions on how to flash these images to the device are given in the file README.bsp. 

@section rebuildYoctoImages Rebuild Yocto Image

Instructions for rebuilding the image are contained in the file 
Legato-Yocto1_4/meta-swi-extras/README.build 

Running the build script with no arguments will print out the help message. There is also a file 
called @c stdbuild.sh to build the images with common options. This can take a long time the first time you run it. 
Once the build is complete, you'll find new images in the directory: 
@code
../build/tmp/deploy/images @endcode

Links are created at the end of the build to point to the latest kernel (kernel) and root file system (rootfs)

@section flashYoctoImages Flash Yocto Image

To flash the images, the device must be in @e fastboot mode. From the shell 
prompt on the device run:
@code
root@swi-mdm9x15:~# sys_reboot bootloader @endcode

After a few seconds, the device will enumerate as an Android Bootloader Device. You can 
test this on the development PC with :

@code dave@devpc$ fastboot devices
MDM9615
@endcode

Then erase and rewrite the kernel and root filesystem partitions using the fastboot command. 
The partitions are called kernel and rootfs.

@code
dave@devpc $ fastboot erase kernel
...
dave@devpc $ fastboot erase rootfs
...
dave@devpc $ fastboot flash kernel kernel
...
dave@devpc $ fastboot flash rootfs rootfs
...
dave@devpc $ fastboot reboot
rebooting...
finished. total time: 0.001s
@endcode

@note You'll need to use fastboot through the micro-USB connection.
 
@section custYoctoImages Custom Yocto Image

Because the Legato image is a Yocto-compliant BSP, there are many options for customizing. 

Here's the easy way to add some packages to the rootfs: 

@code meta-swi-extras/meta-swi-bin/recipes/images/9615-cdp-sierra-image.inc @endcode

For more complex customizations, refer to the Yocto documentation. 

<HR>

Copyright (C) Sierra Wireless, Inc. 2014. All rights reserved. Use of this work is subject to license.

**/
