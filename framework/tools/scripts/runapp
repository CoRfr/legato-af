#!/bin/bash
#
# This program launches a Legato application.  It can be executed with the
#
# Copyright (C) 2013, Sierra Wireless, Inc. All rights reserved. Use of this work is subject to license.

PROGNAME=$(basename $0)

APP_FILE="$1"
IP_ADDR="$2"


function PrintUsage()
{
    echo "Usage:    $PROGNAME APPLICATION"
    echo "   or:    $PROGNAME APPLICATION TARGET-IP-ADDR"
    echo "   or:    $PROGNAME EXECUTABLE [ ARGS ]"
    echo
    echo "When given an application file, determines the target device based on the file's"
    echo "suffix.  If the suffix is '.localhost', the Legato runtime is started on the local"
    echo "host machine (if not already running) and the application is unpacked into a temporary"
    echo "directory and started.  If the suffix is the name of an embedded target (e.g., '.wp7')"
    echo "then a target IP address must be supplied after the application file name.  In this"
    echo "case, $PROGNAME will attempt to connect to the target device, unpack the application"
    echo "into a temporary directory on the target, and start it."
    echo
    echo "When given an executable file name, $PROGNAME assumes that it is built for the"
    echo "local host and attempts to run it (after making sure that the Legato runtime"
    echo "environment is running first).  Any arguments following the name of the executable"
    echo "will be passed to the program as its command line arguments."
}


function RunLocalhostApp()
{
    # Clean out any old app with the same name that is running.
    rm -rf "/tmp/legato/apps/$APP_NAME"

    # Create a temporary directory to unpack the app into.
    mkdir -p "/tmp/legato/apps/$APP_NAME"

    echo "Unpacking app into \"/tmp/legato/apps/$APP_NAME\"..."
    tar -C "/tmp/legato/apps/$APP_NAME" -xjf "$APP_FILE"

    echo "***TODO: Launch it in a container."
}


# Check for no arguments.
if [ $# -lt 1 ]
then
    echo "***ERROR: Application name not specified."
    PrintUsage
    exit 1
fi

# Check for a cry for help.
if [ "$1" = "-h" -o "$1" = "--help" ]
then
    PrintUsage
    exit 0
fi

# Check if the application file name ends in a dot-target suffix.
if echo "$APP_FILE" | grep -e '\.[[:alnum:]]*$' > /dev/null
then
    TARGET=$( echo "$APP_FILE" | sed 's/^.*\.\([[:alnum:]]*$\)/\1/' )
    APP_NAME=$(basename "$APP_FILE" ".$TARGET")
else
    # Filename '$APP_FILE' has no suffix.  Assuming it's an executable built to run on localhost.
    TARGET=localhost
    SINGLE_EXE=true
    APP_NAME=$APP_FILE
fi

if ! [ $LEGATO_ROOT ]
then
    echo "WARNING: LEGATO_ROOT environment variable not set."
    echo "         Assuming '$(pwd)'"
    export LEGATO_ROOT=$(pwd)
fi

# If a single executable program was specified,
if [ "$SINGLE_EXE" = "true" ]
then
    # Make sure the Legato runtime environment is up and running before we run the app.
    echo -n "Starting Legato runtime environment: "
    startlegato LegatoLog.txt
    LEGATO_STARTED=$?

    if [ $LEGATO_STARTED -gt 1 ]
    then
        echo "*FAILED*"
        exit 1
    fi

    # If we started the Legato runtime environment (if startlegato returned 0), then
    # register a trap to stop it when we finish.
    if [ $LEGATO_STARTED -eq 0 ]
    then
        trap "echo -n 'Stopping Legato runtime environment: ' ; stoplegato" 0
    fi

    # Add the Legato localhost build output's lib directory and ./lib to the LD_LIBRARY_PATH
    # so that the program can find its dynamic libraries.
    export LD_LIBRARY_PATH=$LEGATO_ROOT/build/localhost/bin/lib:$PWD/lib:$LD_LIBRARY_PATH

    # Run the program, passing any extra arguments to it, and exit with whatever code the
    # program exits with.
    $*
    exit $?
fi

# If a localhost application file was specified,
if [ "$TARGET" = "localhost" ]
then
    if [ $# -gt 1 ]
    then
        echo "***ERROR: Too many parameters."
        echo "          When running a .localhost application, only an application name is expected."
        echo "try '$PROGNAME --help' for assistance."
        exit 1
    fi

    RunLocalhostApp

    exit 0
fi

# For embedded targets, we need to have a target IP address parameter.
if [ $# -lt 2 ]
then
    echo "***ERROR: Missing IP address for embedded target device."
    echo "try '$PROGNAME --help' for assistance."
    exit 1
elif [ $# -gt 2 ]
then
    echo "***ERROR: Too many parameters."
    echo "          Only an application name and a target IP address is expected."
    echo "try '$PROGNAME --help' for assistance."
    exit 1
fi

# Connect to target device, and stream the app into the onboard app tool, telling the app tool"
# to run it in the foreground, outside of a sandbox, in a volatile (RAM) directory.
cat "$APP_FILE" | ssh "root@$IP_ADDR" "/usr/local/bin/app run '$APP_NAME'"
